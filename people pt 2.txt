Add a person to the collection. You pick the data, but they should have an empty array for children:
db.people.insertOne({
  first_name: "Mohammad",
  last_name: "Ali",
  email: "Mohammad.Ali@example.com",
  gender: "Male",
  state: "New York",
  age: 67,
  children: []
})

Add another person. They should have at least two children:
db.people.insertOne({
  first_name: "John",
  last_name: "Doe",
  email: "john.doe@example.com",
  gender: "Male",
  state: "New York",
  age: 32,
  children: [
    { name: "Alice", age: 5 },
    { name: "Bob", age: 3 }
  ]
})

Update one person named Clarence. He moved from North Dakota to South Dakota:
db.people.updateOne(
  { first_name: "Clarence", state: "North Dakota" },
  { $set: { state: "South Dakota" } }
)

Update Rebecca Hayes. Remove her email address:
db.people.updateOne(
  { first_name: "Rebecca", last_name: "Hayes" },
  { $unset: { email: "" } }
)

Update everyone from Missouri. They all had a birthday today, so add one to their age:
db.people.updateMany(
  { state: "Missouri" },
  { $inc: { age: 1 } }
)

Jerry Baker has updated information. Replace with a new document:
{ first_name: "Jerry", last_name: "Baker-Mendez", email: "jerry@classic.ly", gender:"Male", age: 28, state: "Vermont", "children": [{name: "Alan", age: 18}, {name: "Jenny", age: 3}] }:
db.people.replaceOne(
  { first_name: "Jerry", last_name: "Baker" },
  { first_name: "Jerry", last_name: "Baker-Mendez", email: "jerry@classic.ly", gender: "Male", age: 28, state: "Vermont", children: [{ name: "Alan", age: 18 }, { name: "Jenny", age: 3 }] }
)

Delete Wanda Bowman:
db.people.deleteOne({ first_name: "Wanda", last_name: "Bowman" })

Delete everyone who does not have an email address specified:
db.people.deleteMany({ $or: [ { email: { $exists: false } }, { email: "" } ] })

Create a single field index on the email field:
db.people.createIndex({ email: 1 })

Create a compound index on the first_name and last_name fields:
db.people.createIndex({ first_name: 1, last_name: 1 })

SUBMISSIONS TABLE:

Add several documents to a new submissions collection. Do it all in one command. (Remember, MongoDB will create the collection for you. Just start adding documents.)
title: "The River Bend", upvotes: 10, downvotes: 2, artist: <ID of Anna Howard>
title: "Nine Lives", upvotes: 7, downvotes: 0, artist: <ID of Scott Henderson>
title: "Star Bright", upvotes: 19, downvotes: 3, artist: <ID of Andrea Burke>
title: "Why Like This?", upvotes: 1, downvotes: 5, artist: <ID of Steven Marshall>
title: "Non Sequitur", upvotes: 11, downvotes: 1, artist: <ID of Gerald Bailey>
use submissions; 
db.submissions.insertMany([
  { title: "The River Bend", upvotes: 10, downvotes: 2, artist: "Anna Howard" },
  { title: "Nine Lives", upvotes: 7, downvotes: 0, artist: "Scott Henderson" },
  { title: "Star Bright", upvotes: 19, downvotes: 3, artist: "Andrea Burke" },
  { title: "Why Like This?", upvotes: 1, downvotes: 5, artist: "Steven Marshall" },
  { title: "Non Sequitur", upvotes: 11, downvotes: 1, artist: "Gerald Bailey" }
])

Add 2 upvotes for "The River Bend":
db.submissions.updateOne(
  { title: "The River Bend" },
  { $inc: { upvotes: 2 } }
)

Add a field round2 = true to all submissions with at least 10 upvotes. (expect 3 matches)
db.submissions.updateMany(
  { upvotes: { $gte: 10 } },
  { $set: { round2: true } }
)








