List all people. (200) - db.people.find()
Count all people. (200) - db.people.aggregate([{ $count: "myCount"}])
List all people in Arizona. (6) - db.people.aggregate([{ $match: { "state": "Arizona" } }]), db.people.find(state:"Arizona")
List all males in Arizona. (2) - db.people.find({ $and: [ {"state": "Arizona"}, {"gender":"Male"}]})
List all people in Arizona plus New Mexico. (8) - db.people.find({  state: { $in: ["Arizona", "New Mexico"] } })
List all people under age 40. (90) - db.people.find({ age: { $lt: 40 } })
List all females in Florida between the ages of 40 and 45 (inclusive). (4) - db.people.find({gender: "female", state: "Florida",  age: { $gte: 40, $lte: 45 }})
List people whose first name starts with "H". (2) - db.people.find({ first_name: { $regex: /^H/i } })
List all people in Michigan, sorted by first name. (6) - db.people.find({ state: "Michigan" }).sort({ first_name: 1 })
List all people who live in Virginia or are named Virginia.- db.people.find({ $or: [ { state: "Virginia" }, { first_name: "Virginia" } ] })
List the names of people under age 30. Only display their first and last name. (38) - db.people.find({ age: { $lt: 30 } }, { first_name: 1, last_name: 1, _id: 0 })
List all people in Montana. Display all information except age. (2) - db.people.aggregate([{ $match: { state: "Montana" } }, { $project: { age: 0, "children.age": 0 } }])
List the email addresses of people with a ".edu" email. Only display the email. (12) - db.people.find({ email: { $regex: /\.edu$/ } }, { email: 1, _id: 0 })



